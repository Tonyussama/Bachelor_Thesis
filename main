import cv2
cap = cv2.VideoCapture(0)
cap.set(3, 1280)
cap.set(4, 720)
cap.set(10, 70)

classNames = []
classFile = 'coco.names'
with open(classFile,'rt') as f:
    classNames = f.read().rstrip('\n').split('\n')
configPath = 'ssd_mobilenet_v3_large_coco_2020_01_14.pbtxt'
weightsPath = 'frozen_inference_graph.pb'

net = cv2.dnn_DetectionModel(weightsPath, configPath)
net.setInputSize(320, 320)
net.setInputScale(1.0 / 127.5)
net.setInputMean((127.5, 127.5, 127.5))
net.setInputSwapRB(True)

while True:
    success, img = cap.read()
    classIds, confs, bbox = net.detect(img, confThreshold=0.6)
    print(classIds, bbox)

    if len(classIds) != 0:
            for classId, confidence, border in zip(classIds.flatten(), confs.flatten(), bbox):
                if classNames[classId - 1] == "person":
                    cv2.rectangle(img, border, color=(0, 255, 0), thickness=2)
                    cv2.putText(img, "This is a "+classNames[classId - 1].upper(), (border[0] + 10, border[1] + 30),
                    cv2.FONT_HERSHEY_COMPLEX, 1, (0, 0, 255), 2)
                    #cv2.putText(img, "accuracy ="+str(round(confidence * 100, 2))+"%", (border[0] + 10, border[1] + 60),
                    #cv2.FONT_HERSHEY_COMPLEX, 0.8, (0, 255, 255), 2)
    cv2.imshow("Output", img)
    if  cv2.waitKey(1) & 0xFF==ord('c'):
        break
