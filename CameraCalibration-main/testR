import cv2
import numpy as np

# Define camera intrinsic parameters
K = np.float32([[1000, 0, 500], [0, 1000, 500], [0, 0, 1]])

# Define camera extrinsic parameters
R = np.float32([[1, 0, 0], [0, 1, 0], [0, 0, 1]])  # Identity matrix
t = np.float32([[0], [0], [5]])  # Translation of 5 units along the z-axis


objp = np.zeros((24*17,3), np.float32)
objp[:,:2] = np.mgrid[0:24,0:17].T.reshape(-1,2)
axis = np.float32([[3,0,0], [0,3,0], [0,0,-3]]).reshape(-1,3)
axisBoxes = np.float32([[0,0,0], [0,3,0], [3,3,0], [3,0,0],
                   [0,0,-3],[0,3,-3],[3,3,-3],[3,0,-3] ])


image_points, _ = cv2.projectPoints(axisBoxes, R, t, K, None)


# Draw the projected points on an image
img = np.zeros((1000, 1000, 3), dtype=np.uint8)  # Create a blank image
for p in image_points:
    x, y = tuple(map(int, p.ravel()))
    cv2.circle(img, (x, y), 5, (0, 255, 0), -1)  # Draw a green circle at each point

# Display the image
cv2.imshow('Projected Points', img)
cv2.waitKey(0)
cv2.destroyAllWindows()